import pygame
FONT = pygame.font.Font(None, 32)

class Espece:
    def __init__(self, nom):
        self.nom = nom
        self.vie = 2000
        self.force = 10
        self.defense = 10
        self.vitesse = 10
        self.habilete = 10
        self.endurance = 10
        self.intelligence = 10
        self.position = (0, 0)  # Position initiale
        self.inventaire = []  # Liste pour stocker les objets
        self.experience = 0
        self.niveau = 1
        self.attributs = []
        self.capacités = []

    def set_force(self, force):
        self.force += force

    def set_defense(self, defense):
        self.defense += defense

        def set_habilete(self, habilete):
            self.habilete += habilete

    def set_habilete(self, habilete):
        self.habilete += habilete

    def set_endurance(self, endurance):
        self.endurance += endurance

    def set_intelligence(self, intelligence):
        self.intelligence += intelligence

    def remplir_attributs(self, attributs):
        self.attributs.append(attributs)

    def remplir_capacites(self, capacites):
        self.capacités.append(capacites)


class PersonnageJoueur(Espece):
    def __init__(self, nom, classe):
        super().__init__(nom)
        super().__init__(nom)

class Details:
    def __init__(self, nom, text):
        self.text = text
        self.nom = nom
    def draw(self, screen):
        txt_surface = FONT.render(self.text, True, (255, 255, 255))
        width = max(200, txt_surface.get_width()+10)
        self.rect = pygame.Rect(100, 100, width, txt_surface.get_height()+10)
        pygame.draw.rect(screen, (0, 0, 0), self.rect)
        screen.blit(txt_surface, (self.rect.x+5, self.rect.y+5))
class InputBox:
    def __init__(self, x, y, w, h, img, text1='', capacites='', text=''):
        self.rect = pygame.Rect(x, y, w, h)
        self.color_inactive = pygame.Color('lightskyblue3')
        self.color_active = pygame.Color('dodgerblue2')
        self.color = self.color_inactive
        self.text1 = text1
        self.txt_surface = FONT.render(text, True, self.color)
        self.active = False
        self.capacites = capacites
        self.img = img
        self.text = text
    def details(self, event, screen):
        if self.rect.collidepoint(event.pos) :
            text1 = Details(self.text1, self.text)
            text1.draw(screen)
    def handle_event(self, event):
        if event.type == pygame.MOUSEBUTTONDOWN and self.rect.collidepoint(event.pos) and self.active == False:
                self.active = not self.active
                Espece.remplir_capacites(self.capacites)
        elif event.type == pygame.MOUSEBUTTONDOWN and self.rect.collidepoint(event.pos) and self.active == True:
                self.active = not self.active
                Espece.capacités.remove(self.capacites)


